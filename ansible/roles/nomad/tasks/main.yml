---
- name: Create Nomad directories
  file:
    path: "{{ item }}"
    mode: 0755
    owner: nomad
    group: nomad
    state: directory
  with_items:
    - "{{ nomad_config_dir }}"
    - "{{ nomad_data_dir }}"

- name: Add Nomad user to docker group
  user:
    name: nomad
    append: true
    groups: docker

- name: Install CNI plugins
  import_tasks: cni_plugins.yml

- name: Setup Vault integration
  import_tasks: vault_integration.yml
  when: setup_vault_integration | bool

- name: Copy service file
  template:
    src: "nomad.service.j2"
    dest: "/etc/systemd/system/nomad.service"
    mode: 0644
    owner: root
    group: root
  notify:
    - restart nomad

- name: Copy Nomad config files
  template:
    src: "nomad.hcl.j2"
    dest: "{{ nomad_config_dir }}/nomad.hcl"
    mode: 0644
    owner: nomad
    group: nomad
  notify:
    - reload nomad

- name: Start Nomad
  systemd:
    name: nomad
    state: started
    enabled: true
    daemon_reload: true
  register: nomad_started

- name: Restart Nomad if there are changes
  meta: flush_handlers

- name: Wait for Nomad port
  wait_for:
    port: 4646
    state: started

# See terraform/nomad for resources
# Note that Terraform must be installed on Ansible host
- set_fact:
    nomad_terraform_dir: "{{ lookup('pipe', 'git rev-parse --show-toplevel') }}/terraform/nomad"

- name: Delete existing state from Terraform if any
  become: false
  community.general.terraform:
    project_path: "{{ nomad_terraform_dir }}"
    state: absent
  delegate_to: localhost
  when: nomad_terraform_reset | bool

- name: Run Nomad jobs with Terraform provider
  become: false
  community.general.terraform:
    project_path: "{{ nomad_terraform_dir }}"
    state: present
    force_init: true
    check_destroy: true
  register: nomad_terraform_output
  delegate_to: localhost

- debug:
    msg: "{{ nomad_terraform_output.stdout }}"
  when: nomad_terraform_output is defined
